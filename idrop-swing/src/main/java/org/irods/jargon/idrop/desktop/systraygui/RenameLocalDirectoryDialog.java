/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.irods.jargon.idrop.desktop.systraygui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

import org.irods.jargon.idrop.desktop.systraygui.viscomponents.LocalFileNode;
import org.irods.jargon.idrop.desktop.systraygui.viscomponents.LocalFileSystemModel;
import org.irods.jargon.idrop.desktop.systraygui.viscomponents.LocalFileTree;
import org.irods.jargon.idrop.exceptions.IdropException;
import org.slf4j.LoggerFactory;

/**
 * Dialog to gather a new directory name and perform a rename operation on a
 * local file.
 * 
 * @author mikeconway
 */
public class RenameLocalDirectoryDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9026567571173133481L;
	private final iDrop idrop;
	private final LocalFileTree localFileTree;
	private final LocalFileNode currentNode;
	public static org.slf4j.Logger log = LoggerFactory
			.getLogger(RenameLocalDirectoryDialog.class);

	/** Creates new form RenameLocalDirectoryDialog */
	public RenameLocalDirectoryDialog(final iDrop parent, final boolean modal,
			final String currentAbsolutePath,
			final LocalFileTree localFileTree, final LocalFileNode currentNode) {
		super(parent, modal);
		idrop = parent;
		this.localFileTree = localFileTree;
		this.currentNode = currentNode;
		initComponents();
		String computedAbsolutePath = currentAbsolutePath.replace('\\', '/');
		int lastPathPartIdx = computedAbsolutePath.lastIndexOf("/");
		if (lastPathPartIdx == -1) {
			String msg = "could not find last path component of absolute path:"
					+ computedAbsolutePath;
			log.error(msg);
			idrop.showIdropException(new IdropException(msg));
			return;
		}

		String parentAbsPath = currentAbsolutePath
				.substring(0, lastPathPartIdx);
		String currentCollectionOrFileName = currentAbsolutePath
				.substring(lastPathPartIdx + 1);

		log.debug("computed parent abs path as:{}", parentAbsPath);
		log.debug("computed current file or collection name as:{}",
				currentCollectionOrFileName);

		txtCurrentFolder.setText(currentCollectionOrFileName);
		registerKeystrokeListener();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitle = new javax.swing.JLabel();
        pnlFolderData = new javax.swing.JPanel();
        lblCurrentParent = new java.awt.Label();
        lblNewDiretoryName = new java.awt.Label();
        txtCurrentFolder = new javax.swing.JTextField();
        txtNewFolder = new javax.swing.JTextField();
        pnlBottom = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("iDrop - Rename local file or directory");
        setMinimumSize(new java.awt.Dimension(600, 300));
        setName("renameLocalDirectoryDialog"); // NOI18N
        setPreferredSize(new java.awt.Dimension(600, 300));

        lblTitle.setText("Please enter a new name for the file or collection");
        getContentPane().add(lblTitle, java.awt.BorderLayout.NORTH);

        pnlFolderData.setLayout(new java.awt.GridBagLayout());

        lblCurrentParent.setText("Current name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(59, 116, 0, 0);
        pnlFolderData.add(lblCurrentParent, gridBagConstraints);

        lblNewDiretoryName.setText("New name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 132, 60, 0);
        pnlFolderData.add(lblNewDiretoryName, gridBagConstraints);
        lblNewDiretoryName.getAccessibleContext().setAccessibleName("New directory name:");

        txtCurrentFolder.setEditable(false);
        txtCurrentFolder.setColumns(50);
        txtCurrentFolder.setToolTipText("A name for the new folder underneath the displayed parent");
        txtCurrentFolder.setFocusable(false);
        txtCurrentFolder.setName("currentName"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 415;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(59, 10, 0, 147);
        pnlFolderData.add(txtCurrentFolder, gridBagConstraints);

        txtNewFolder.setColumns(50);
        txtNewFolder.setToolTipText("A name for the new folder underneath the displayed parent");
        txtNewFolder.setName("newName"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 415;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 60, 147);
        pnlFolderData.add(txtNewFolder, gridBagConstraints);

        getContentPane().add(pnlFolderData, java.awt.BorderLayout.CENTER);

        pnlBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_192_circle_remove.png"))); // NOI18N
        btnCancel.setMnemonic('c');
        btnCancel.setToolTipText("Cancel the operation");
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlBottom.add(btnCancel);

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_193_circle_ok.png"))); // NOI18N
        btnOK.setMnemonic('o');
        btnOK.setToolTipText("Proceed with the rename");
        btnOK.setName("btnOk"); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        pnlBottom.add(btnOK);

        getContentPane().add(pnlBottom, java.awt.BorderLayout.SOUTH);

        getAccessibleContext().setAccessibleName("Rename file or folder dialog");

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btnCancelActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelActionPerformed
		dispose();
	}// GEN-LAST:event_btnCancelActionPerformed

	private void btnOKActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnOKActionPerformed
		doRename();
	}// GEN-LAST:event_btnOKActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private java.awt.Label lblCurrentParent;
    private java.awt.Label lblNewDiretoryName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlFolderData;
    private javax.swing.JTextField txtCurrentFolder;
    private javax.swing.JTextField txtNewFolder;
    // End of variables declaration//GEN-END:variables
	private void doRename() {
		// add the new folder to irods, add to the tree, and scroll the tree
		// into view

		if (txtNewFolder.getText().isEmpty()) {
			txtNewFolder.setBackground(Color.red);
			idrop.showMessageFromOperation("please enter a new file or collection name");
			return;
		}

		final RenameLocalDirectoryDialog thisDialog = this;

		java.awt.EventQueue.invokeLater(new Runnable() {

			@Override
			public void run() {
				log.info("renaming a file named:{}", txtCurrentFolder.getText());
				thisDialog.setCursor(Cursor
						.getPredefinedCursor(Cursor.WAIT_CURSOR));
				try {

					LocalFileNode parentNode = (LocalFileNode) currentNode
							.getParent();
					File fileToRename = (File) currentNode.getUserObject();
					log.debug("reanaming local file:{}",
							fileToRename.getAbsolutePath());
					File newFile = new File(fileToRename.getParent(),
							txtNewFolder.getText());
					log.debug("new file name is:{}", newFile.getAbsolutePath());

					log.debug("renaming now...");
					fileToRename.renameTo(newFile);

					LocalFileSystemModel localFileTreeModel = (LocalFileSystemModel) localFileTree
							.getModel();
					log.debug("updating tree model, remove old and add new nodes");

					currentNode.setUserObject(newFile);
					localFileTreeModel.reload(parentNode);

					idrop.showMessageFromOperation("rename successful");

				} catch (Exception ex) {
					Logger.getLogger(RenameLocalDirectoryDialog.class.getName())
							.log(Level.SEVERE, null, ex);
					idrop.showIdropException(ex);
				} finally {
					thisDialog.setCursor(Cursor
							.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
				}

				thisDialog.dispose();
			}
		});
	}

	/**
	 * Register a listener for the enter event, so login can occur.
	 */
	private void registerKeystrokeListener() {

		KeyStroke enter = KeyStroke.getKeyStroke(
				java.awt.event.KeyEvent.VK_ENTER, 0);
		Action enterAction = new AbstractAction() {

			/**
			 * 
			 */
			private static final long serialVersionUID = -8338439758509588424L;

			@Override
			public void actionPerformed(final ActionEvent e) {
				doRename();
			}
		};
		btnOK.registerKeyboardAction(enterAction, enter,
				JComponent.WHEN_IN_FOCUSED_WINDOW);

	}
}
