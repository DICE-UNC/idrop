/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.irods.jargon.idrop.desktop.systraygui.viscomponents;

import java.util.ArrayList;
import java.util.List;
import org.irods.jargon.core.exception.JargonException;
import org.irods.jargon.core.pub.CollectionAO;
import org.irods.jargon.core.pub.domain.AvuData;
import org.irods.jargon.core.pub.io.IRODSFile;
import org.irods.jargon.core.pub.io.IRODSFileFactory;
import org.irods.jargon.core.query.AVUQueryElement;
import org.irods.jargon.core.query.AVUQueryElement.AVUQueryPart;
import org.irods.jargon.core.query.AVUQueryOperatorEnum;
import org.irods.jargon.core.query.JargonQueryException;
import org.irods.jargon.core.query.MetaDataAndDomainData;
import org.irods.jargon.core.utils.MiscIRODSUtils;
import org.irods.jargon.idrop.desktop.systraygui.ExperimentDialog;
import org.irods.jargon.idrop.desktop.systraygui.MessageManager;
import org.irods.jargon.idrop.desktop.systraygui.ToolsDialog;
import org.irods.jargon.idrop.desktop.systraygui.iDrop;
import org.irods.jargon.idrop.finder.IRODSFinderDialog;
import org.openide.util.Exceptions;
import org.slf4j.LoggerFactory;

/**
 *
 * @author mconway
 */
public class AddSampleDialog extends javax.swing.JDialog {
    
      iDrop idropGUI;
      String experimentTarget;
      String experimentId;
      
        public static org.slf4j.Logger log = LoggerFactory
            .getLogger(AddSampleDialog.class);

    /**
     * Creates new form AddExperimentDialog
     */
    public AddSampleDialog(ExperimentDialog parent, boolean modal, iDrop idropGUI) {
        super(parent, modal);
        this.idropGUI = idropGUI;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlSelectParentDir = new javax.swing.JPanel();
        btnBrowseForDirectory = new javax.swing.JButton();
        txtParentDirectory = new javax.swing.JTextField();
        lblPrompt = new javax.swing.JLabel();
        scrollMetadata = new javax.swing.JScrollPane();
        pnlMetadata = new javax.swing.JPanel();
        lblExperimentId = new javax.swing.JLabel();
        txtExperimentId = new javax.swing.JTextField();
        lblClearingProtocol = new javax.swing.JLabel();
        txtClearingProtocol = new javax.swing.JTextField();
        lblSacrificeDate = new javax.swing.JLabel();
        txtSacrificeDate = new javax.swing.JFormattedTextField();
        lblClearingDate = new javax.swing.JLabel();
        txtClearingDate = new javax.swing.JFormattedTextField();
        lblSampleType = new javax.swing.JLabel();
        comboSampleType = new javax.swing.JComboBox<>();
        pnlBottom = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        bntSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlSelectParentDir.setLayout(new java.awt.GridBagLayout());

        btnBrowseForDirectory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_148_folder_flag.png"))); // NOI18N
        btnBrowseForDirectory.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.btnBrowseForDirectory.text")); // NOI18N
        btnBrowseForDirectory.setToolTipText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.btnBrowseForDirectory.toolTipText")); // NOI18N
        btnBrowseForDirectory.setName("btnBrowseForDirectory"); // NOI18N
        btnBrowseForDirectory.setPreferredSize(new java.awt.Dimension(110, 37));
        btnBrowseForDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseForDirectoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlSelectParentDir.add(btnBrowseForDirectory, gridBagConstraints);

        txtParentDirectory.setColumns(30);
        txtParentDirectory.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.txtParentDirectory.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlSelectParentDir.add(txtParentDirectory, gridBagConstraints);

        lblPrompt.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblPrompt.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        pnlSelectParentDir.add(lblPrompt, gridBagConstraints);

        getContentPane().add(pnlSelectParentDir, java.awt.BorderLayout.NORTH);

        pnlMetadata.setLayout(new java.awt.GridBagLayout());

        lblExperimentId.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblExperimentId.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlMetadata.add(lblExperimentId, gridBagConstraints);
        lblExperimentId.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblExperimentId.AccessibleContext.accessibleName")); // NOI18N

        txtExperimentId.setColumns(20);
        txtExperimentId.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.txtExperimentId.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlMetadata.add(txtExperimentId, gridBagConstraints);

        lblClearingProtocol.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblClearingProtocol.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlMetadata.add(lblClearingProtocol, gridBagConstraints);

        txtClearingProtocol.setColumns(20);
        txtClearingProtocol.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.txtClearingProtocol.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        pnlMetadata.add(txtClearingProtocol, gridBagConstraints);

        lblSacrificeDate.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblSacrificeDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        pnlMetadata.add(lblSacrificeDate, gridBagConstraints);

        txtSacrificeDate.setColumns(12);
        txtSacrificeDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtSacrificeDate.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.txtSacrificeDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlMetadata.add(txtSacrificeDate, gridBagConstraints);

        lblClearingDate.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblClearingDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        pnlMetadata.add(lblClearingDate, gridBagConstraints);

        txtClearingDate.setColumns(12);
        txtClearingDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtClearingDate.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.txtClearingDate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlMetadata.add(txtClearingDate, gridBagConstraints);

        lblSampleType.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.lblSampleType.text")); // NOI18N
        pnlMetadata.add(lblSampleType, new java.awt.GridBagConstraints());

        comboSampleType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "WT", "KO" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlMetadata.add(comboSampleType, gridBagConstraints);

        scrollMetadata.setViewportView(pnlMetadata);

        getContentPane().add(scrollMetadata, java.awt.BorderLayout.CENTER);

        pnlBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_197_remove.png"))); // NOI18N
        btnCancel.setMnemonic('c');
        btnCancel.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.btnCancel.text")); // NOI18N
        btnCancel.setToolTipText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.btnCancel.toolTipText")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(110, 37));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlBottom.add(btnCancel);

        bntSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_193_circle_ok.png"))); // NOI18N
        bntSave.setMnemonic('O');
        bntSave.setText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.bntSave.text")); // NOI18N
        bntSave.setToolTipText(org.openide.util.NbBundle.getMessage(AddSampleDialog.class, "AddSampleDialog.bntSave.toolTipText")); // NOI18N
        bntSave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bntSave.setMaximumSize(null);
        bntSave.setMinimumSize(null);
        bntSave.setName("btnExit"); // NOI18N
        bntSave.setPreferredSize(new java.awt.Dimension(90, 37));
        bntSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSaveActionPerformed(evt);
            }
        });
        pnlBottom.add(bntSave);

        getContentPane().add(pnlBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseForDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseForDirectoryActionPerformed

        IRODSFinderDialog irodsFinderDialog = new IRODSFinderDialog(idropGUI, true, idropGUI.getiDropCore(), idropGUI.getIrodsAccount());
        irodsFinderDialog.setVisible(true);
        experimentTarget = irodsFinderDialog.getSelectedAbsolutePath();
        
        if (experimentTarget != null) {
            try {
                txtParentDirectory.setText(MiscIRODSUtils.abbreviateFileName(experimentTarget));
                txtParentDirectory.setText(experimentTarget);
                            
                CollectionAO collectionAO = idropGUI.getiDropCore().getIRODSAccessObjectFactory().getCollectionAO(idropGUI.getIrodsAccount());
                List<AVUQueryElement> query = new ArrayList<AVUQueryElement>();
                query.add(AVUQueryElement.instanceForValueQuery(AVUQueryPart.ATTRIBUTE, AVUQueryOperatorEnum.EQUAL, "ExptId"));
                List<MetaDataAndDomainData> result = collectionAO.findMetadataValuesByMetadataQueryForCollection(query, experimentTarget);
                if(result.isEmpty()) {
                    log.warn("no experiment for:{}", txtParentDirectory);
                    MessageManager.showWarning(this, "selected collection is not an experiment");
                }
                
                experimentId = result.get(0).getAvuValue();
                lblPrompt.setText("Sample is associated with experiment:" + experimentId);
                
            } catch (JargonException ex) {
               log.error("exception finding experiment", ex);
               MessageManager.showError(this, ex.getMessage());
            } catch (JargonQueryException ex) {
                log.error("exception finding experiment", ex);
               MessageManager.showError(this, ex.getMessage());
            }
            
        }
    }//GEN-LAST:event_btnBrowseForDirectoryActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
             
        dispose();
            
    }//GEN-LAST:event_btnCancelActionPerformed

    private void bntSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSaveActionPerformed
                
        dispose();
    }//GEN-LAST:event_bntSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSave;
    private javax.swing.JButton btnBrowseForDirectory;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox<String> comboSampleType;
    private javax.swing.JLabel lblClearingDate;
    private javax.swing.JLabel lblClearingProtocol;
    private javax.swing.JLabel lblExperimentId;
    private javax.swing.JLabel lblPrompt;
    private javax.swing.JLabel lblSacrificeDate;
    private javax.swing.JLabel lblSampleType;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlMetadata;
    private javax.swing.JPanel pnlSelectParentDir;
    private javax.swing.JScrollPane scrollMetadata;
    private javax.swing.JFormattedTextField txtClearingDate;
    private javax.swing.JTextField txtClearingProtocol;
    private javax.swing.JTextField txtExperimentId;
    private javax.swing.JTextField txtParentDirectory;
    private javax.swing.JFormattedTextField txtSacrificeDate;
    // End of variables declaration//GEN-END:variables
}
