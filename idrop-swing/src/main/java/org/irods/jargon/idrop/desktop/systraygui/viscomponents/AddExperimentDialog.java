/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.irods.jargon.idrop.desktop.systraygui.viscomponents;

import org.irods.jargon.core.exception.JargonException;
import org.irods.jargon.core.pub.CollectionAO;
import org.irods.jargon.core.pub.domain.AvuData;
import org.irods.jargon.core.pub.io.IRODSFile;
import org.irods.jargon.core.pub.io.IRODSFileFactory;
import org.irods.jargon.core.utils.MiscIRODSUtils;
import org.irods.jargon.idrop.desktop.systraygui.ExperimentDialog;
import org.irods.jargon.idrop.desktop.systraygui.MessageManager;
import org.irods.jargon.idrop.desktop.systraygui.ToolsDialog;
import org.irods.jargon.idrop.desktop.systraygui.iDrop;
import org.irods.jargon.idrop.finder.IRODSFinderDialog;
import org.slf4j.LoggerFactory;

/**
 *
 * @author mconway
 */
public class AddExperimentDialog extends javax.swing.JDialog {
    
      iDrop idropGUI;
      String experimentTarget;
      
        public static org.slf4j.Logger log = LoggerFactory
            .getLogger(AddExperimentDialog.class);

    /**
     * Creates new form AddExperimentDialog
     */
    public AddExperimentDialog(ExperimentDialog parent, boolean modal, iDrop idropGUI) {
        super(parent, modal);
        this.idropGUI = idropGUI;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlSelectParentDir = new javax.swing.JPanel();
        btnBrowseForDirectory = new javax.swing.JButton();
        txtParentDirectory = new javax.swing.JTextField();
        scrollMetadata = new javax.swing.JScrollPane();
        pnlMetadata = new javax.swing.JPanel();
        lblExperimentId = new javax.swing.JLabel();
        txtExperimentId = new javax.swing.JTextField();
        lblLab = new javax.swing.JLabel();
        txtLab = new javax.swing.JTextField();
        lblExperimentalPurpose = new javax.swing.JLabel();
        txtExperimentalPurpose = new javax.swing.JTextField();
        pnlBottom = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        bntSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnBrowseForDirectory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_148_folder_flag.png"))); // NOI18N
        btnBrowseForDirectory.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.btnBrowseForDirectory.text")); // NOI18N
        btnBrowseForDirectory.setToolTipText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.btnBrowseForDirectory.toolTipText")); // NOI18N
        btnBrowseForDirectory.setName("btnBrowseForDirectory"); // NOI18N
        btnBrowseForDirectory.setPreferredSize(new java.awt.Dimension(110, 37));
        btnBrowseForDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseForDirectoryActionPerformed(evt);
            }
        });
        pnlSelectParentDir.add(btnBrowseForDirectory);

        txtParentDirectory.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.txtParentDirectory.text")); // NOI18N
        pnlSelectParentDir.add(txtParentDirectory);

        getContentPane().add(pnlSelectParentDir, java.awt.BorderLayout.NORTH);

        pnlMetadata.setLayout(new java.awt.GridBagLayout());

        lblExperimentId.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.lblExperimentId.text")); // NOI18N
        pnlMetadata.add(lblExperimentId, new java.awt.GridBagConstraints());

        txtExperimentId.setColumns(20);
        txtExperimentId.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.txtExperimentId.text")); // NOI18N
        pnlMetadata.add(txtExperimentId, new java.awt.GridBagConstraints());

        lblLab.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.lblLab.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlMetadata.add(lblLab, gridBagConstraints);

        txtLab.setColumns(20);
        txtLab.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.txtLab.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlMetadata.add(txtLab, gridBagConstraints);

        lblExperimentalPurpose.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.lblExperimentalPurpose.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlMetadata.add(lblExperimentalPurpose, gridBagConstraints);

        txtExperimentalPurpose.setColumns(20);
        txtExperimentalPurpose.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.txtExperimentalPurpose.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlMetadata.add(txtExperimentalPurpose, gridBagConstraints);

        scrollMetadata.setViewportView(pnlMetadata);

        getContentPane().add(scrollMetadata, java.awt.BorderLayout.CENTER);

        pnlBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_197_remove.png"))); // NOI18N
        btnCancel.setMnemonic('c');
        btnCancel.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.btnCancel.text")); // NOI18N
        btnCancel.setToolTipText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.btnCancel.toolTipText")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(110, 37));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlBottom.add(btnCancel);

        bntSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/irods/jargon/idrop/desktop/systraygui/images/glyphicons_193_circle_ok.png"))); // NOI18N
        bntSave.setMnemonic('O');
        bntSave.setText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.bntSave.text")); // NOI18N
        bntSave.setToolTipText(org.openide.util.NbBundle.getMessage(AddExperimentDialog.class, "AddExperimentDialog.bntSave.toolTipText")); // NOI18N
        bntSave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bntSave.setMaximumSize(null);
        bntSave.setMinimumSize(null);
        bntSave.setName("btnExit"); // NOI18N
        bntSave.setPreferredSize(new java.awt.Dimension(90, 37));
        bntSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSaveActionPerformed(evt);
            }
        });
        pnlBottom.add(bntSave);

        getContentPane().add(pnlBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseForDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseForDirectoryActionPerformed

        IRODSFinderDialog irodsFinderDialog = new IRODSFinderDialog(idropGUI, true, idropGUI.getiDropCore(), idropGUI.getIrodsAccount());
        irodsFinderDialog.setVisible(true);
        experimentTarget = irodsFinderDialog.getSelectedAbsolutePath();

        if (experimentTarget != null) {
            txtParentDirectory.setText(MiscIRODSUtils.abbreviateFileName(experimentTarget));
            txtParentDirectory.setText(experimentTarget);
        }
    }//GEN-LAST:event_btnBrowseForDirectoryActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
              
        
        dispose();
              

    }//GEN-LAST:event_btnCancelActionPerformed

    private void bntSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSaveActionPerformed
       try {
                IRODSFileFactory irodsFileFactory = idropGUI.getiDropCore().getIRODSFileFactoryForLoggedInAccount();
               IRODSFile parentFile = irodsFileFactory.instanceIRODSFile(experimentTarget);
               parentFile.mkdirs();
               idropGUI.getiDropCore().getIRODSAccessObjectFactory();
               IRODSFile experimentFile = irodsFileFactory.instanceIRODSFile(parentFile.getAbsolutePath(), txtExperimentId.getText());
               experimentFile.mkdirs();
               CollectionAO collectionAO = idropGUI.getiDropCore().getIRODSAccessObjectFactory().getCollectionAO(idropGUI.getIrodsAccount());
               AvuData data = new AvuData("ExptId", txtExperimentId.getText(), "ipc-reserved-unit");
               collectionAO.addAVUMetadata(experimentFile.getAbsolutePath(), data);
               data = new AvuData("Lab/PI", txtLab.getText(), "ipc-reserved-unit");
               collectionAO.addAVUMetadata(experimentFile.getAbsolutePath(), data);
               data = new AvuData("ExperimentalPurpose", txtExperimentalPurpose.getText(), "ipc-reserved-unit");
               collectionAO.addAVUMetadata(experimentFile.getAbsolutePath(), data);
              } catch (JargonException je) {
                  log.error("error creating experiment", je);
                  MessageManager.showError(this, je.getMessage());
              } finally {
                  idropGUI.getiDropCore().closeAllIRODSConnections();
              }
              dispose();
    }//GEN-LAST:event_bntSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSave;
    private javax.swing.JButton btnBrowseForDirectory;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel lblExperimentId;
    private javax.swing.JLabel lblExperimentalPurpose;
    private javax.swing.JLabel lblLab;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlMetadata;
    private javax.swing.JPanel pnlSelectParentDir;
    private javax.swing.JScrollPane scrollMetadata;
    private javax.swing.JTextField txtExperimentId;
    private javax.swing.JTextField txtExperimentalPurpose;
    private javax.swing.JTextField txtLab;
    private javax.swing.JTextField txtParentDirectory;
    // End of variables declaration//GEN-END:variables
}
