%product iRODS iDrop Web
%copyright Any copyright here.
%vendor Data Intensive Cyberinfrastructure Foundation, Renaissance Computing Institute
%license COPYING
%readme README
%description Web Based Interface for Interacting with the iRODS data grid
%version 3.1 300001

%requires httpd 2
%requires java 6
%requires tomcat5

%format all

# =-=-=-=-=-=-=-
# variables for configuring the install
# =-=-=-=-=-=-=-
$OS_IDROP_ACCT=idropweb
$OS_IDROP_DIR=idrop-web
$IDROP_HOME_DIR=/var/lib/$OS_IDROP_DIR
$IDROP_EXTRAS=idrop-web-extras

$OS_TOMCAT_ACCT=tomcat
$TOMCAT_VER=tomcat5
$TOMCAT_HOME_DIR=/usr/share/${TOMCAT_VER}
$TOMCAT_STARTED=false

# =-=-=-=-=-=-=-
# preinstall directives
# =-=-=-=-=-=-=-
%preinstall << END_PREINSTALL

# create a service account for idrop-web 
# determine if the service account already exists
USER=$$( grep $OS_IDROP_ACCT /etc/passwd )
if [ -n "$$USER" ];
then
 echo "WARNING :: Service Account $OS_IDROP_ACCT Already Exists"
else
# create the service account
 echo "INFO :: Creating Service Account: $OS_IDROP_ACCT at ${IDROP_HOME_DIR}"
 /usr/sbin/useradd -m -d ${IDROP_HOME_DIR} $OS_IDROP_ACCT
 chmod 755 ${IDROP_HOME_DIR}
fi
END_PREINSTALL

# =-=-=-=-=-=-=-
# post install
# =-=-=-=-=-=-=-
%postinstall << END_POSTINSTALL

# create link to xala jar for tomcat5 so it can find TransformerFactory class
# for Grails apps
ln -s /usr/share/java/xalan-j2.jar /var/lib/${TOMCAT_VER}/common/endorsed/xalan-j2.jar

# if not already running - start tomcat
RESULT=$$(ps ax | grep -v grep | grep -i tomcat)
if [ -n "$$RESULT" ];
then
  echo "INFO :: Starting Tomcat ..."
  /sbin/service ${TOMCAT_VER} start
  # wait until the tomcat conf/Catalina/localhost folder is created
  # or timeout after about 10 seconds
  TRIES=0
  while [ "$$TRIES" -lt 100 -a ! -e ${TOMCAT_HOME_DIR}/conf/Catalina/localhost ]; do
   TRIES=$$((TRIES + 1))
   sleep .1
  done
fi

# create config file (if it does not exist) for idrop-web in order to allow symbolic linking
echo "INFO :: Configuring iDrop Web for Tomcat ..."
if [ -f ${TOMCAT_HOME_DIR}/conf/Catalina/localhost/${OS_IDROP_DIR}.xml ];
then
 echo "WARNING :: ${TOMCAT_HOME_DIR}/conf/Catalina/localhost/${OS_IDROP_DIR}.xml Already Exists"
else
 echo "<?xml version='1.0' encoding='utf-8'?>
<Context path=\"/idrop-web\" allowLinking=\"true\">

    <WatchedResource>WEB-INF/web.xml</WatchedResource>

</Context>" > ${TOMCAT_HOME_DIR}/conf/Catalina/localhost/${OS_IDROP_DIR}.xml
fi

# create symbolic link to idrop-web
if [ -f ${TOMCAT_HOME_DIR}/webapps/${OS_IDROP_DIR} ];
then
 echo "WARNING :: ${TOMCAT_HOME_DIR}/webapps/${OS_IDROP_DIR} Already Exists"
else
 ln -s ${IDROP_HOME_DIR} ${TOMCAT_HOME_DIR}/webapps/${OS_IDROP_DIR}
fi

# add iptables entry for HTTP and port 8080
echo "INFO :: Modifying Firewall For HTTP Port 8080 access ..."
/sbin/iptables -N idropweb
/sbin/iptables -I INPUT 1 -j idropweb
/sbin/iptables -A idropweb -m state --state NEW -p tcp --dport 80 -j ACCEPT
/sbin/iptables -A idropweb -m tcp -p tcp --dport 8080 -m state --state NEW -j ACCEPT
/sbin/iptables -A idropweb -m state --state ESTABLISHED,RELATED -j ACCEPT
/sbin/service iptables save

# Done - print info for starting up
echo "INFO :: To Run IDrop Web In Web Browser Type: http://127.0.0.1:8080/idrop-web"
echo "INFO :: To use iDrop-Lite applet or iDrop Swing Desktop application, verify that your browser supports JAVA"
END_POSTINSTALL

# =-=-=-=-=-=-=-
# preremove
# =-=-=-=-=-=-=-
%preremove << END_PREREMOVE
# first check to make sure idrop-web is not logged in.
USER=$$( who | grep $OS_IDROP_ACCT )
if [ -n "$$USER" ]; then
  echo "${OS_IDROP_ACCT} is currently logged in. Aborting."
  exit 1
fi

# remove iptables entries related to idropweb install
echo "INFO :: Removing Firewall Access for iDrop Web ..."
/sbin/iptables -F idropweb
/sbin/iptables -D INPUT -j idropweb
/sbin/iptables -X idropweb
%if RPM
/sbin/service iptables save
%else
/sbin/iptables-save
%endif
END_PREREMOVE

# =-=-=-=-=-=-=-
# postremove
%postremove << END_POSTREMOVE
# remove idropweb service account
echo "INFO: :: Removing iDrop Web Service Account: ${OS_IDROP_ACCT} ..."
USER=$$( grep $OS_IDROP_ACCT /etc/passwd )
if [ -n "$$USER" ];
then
 /usr/sbin/userdel -r $OS_IDROP_ACCT
else
 echo "WARNING :: Service Account: ${OS_IDROP_ACCT} Already Removed"
fi
END_POSTREMOVE

# =-=-=-=-=-=-=-
# =-=-=-=-=-=-=-
# files, and more files...
d 775 idropweb idropweb /etc/idrop-web -
f 664 idropweb idropweb /etc/idrop-web/idrop-web-config.groovy ./idrop-web-config.groovy
