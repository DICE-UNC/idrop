<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<beans:bean id="irodsConnectionManager"
		class="org.irods.jargon.core.connection.IRODSSimpleProtocolManager"
		factory-method="instance" init-method="initialize" destroy-method="destroy">
	</beans:bean>

	<beans:bean id="irodsSession"
		class="org.irods.jargon.core.connection.IRODSSession" factory-method="instance">
		<beans:constructor-arg
			type="org.irods.jargon.core.connection.IRODSProtocolManager" ref="irodsConnectionManager" />
	</beans:bean>

	<beans:bean id="irodsAccessObjectFactory"
		class="org.irods.jargon.core.pub.IRODSAccessObjectFactoryImpl">
		<beans:constructor-arg ref="irodsSession"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="taggingServiceFactory"
		class="org.irods.jargon.usertagging.TaggingServiceFactoryImpl">
		<beans:constructor-arg ref="irodsAccessObjectFactory"></beans:constructor-arg>
	</beans:bean>

	<beans:bean id="imageServiceFactory"
		class="org.irods.jargon.datautils.image.ImageServiceFactoryImpl">
		<beans:constructor-arg ref="irodsAccessObjectFactory"></beans:constructor-arg>
	</beans:bean>

	<beans:bean id="authenticationManager"
		class="org.irods.jargon.spring.security.IRODSAccountAuthenticationManager">
		<beans:property name="irodsAccessObjectFactory" ref="irodsAccessObjectFactory"></beans:property>
	</beans:bean>

	<beans:bean id="springSecurityFilterChain"
		class="org.springframework.security.web.FilterChainProxy">
		<filter-chain-map path-type="ant">
			<filter-chain pattern="/css/**" filters="none" />
			<filter-chain pattern="/images/**" filters="none" />
			<filter-chain pattern="/js/**" filters="none" />
			<filter-chain pattern="/login/*" filters="none" />
			<filter-chain pattern="/**"
				filters="securityContextPersistenceFilter,
				logoutFilter,
				authenticationProcessingFilter,
				exceptionTranslationFilter,
				filterSecurityInterceptor" />
		</filter-chain-map>
	</beans:bean>

	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource">
			<filter-security-metadata-source
				use-expressions="true">
				<intercept-url pattern="/images/**" access="permitAll" />
				<intercept-url pattern="/css/**" access="permitAll" />
				<intercept-url pattern="/js/**" access="permitAll" />
				<intercept-url pattern="/login*" access="permitAll" />
				<intercept-url pattern="/**" access="isAuthenticated()" />

			</filter-security-metadata-source>
		</beans:property>
	</beans:bean>

	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="/login/logout" />
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/j_spring_security_logout" />
	</beans:bean>

	<beans:bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<beans:property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</beans:bean>

	<beans:bean id="authenticationProcessingFilter"
		class="org.irods.jargon.spring.security.IRODSAccountAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationFailureHandler"
			ref="authenticationFailureHandler" /> 
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login/login" />
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/login/login" />
	</beans:bean>

	<beans:bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<beans:property name='securityContextRepository'>
			<beans:bean
				class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
				<beans:property name='allowSessionCreation' value='true' />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="authenticationFailureHandler"
		class="org.irods.jargon.spring.security.IRODSAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login/login" />
	</beans:bean>
</beans:beans>